{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///home/humayou/Desktop/Decentralized-Voting-System/src/components/CreateElectionForm.jsx"],"sourcesContent":["import { useVoting } from \"@/context/ContractContext\";\nimport { useState } from \"react\";\n\n // Create Election Form\n const CreateElectionForm = () => {\n    const [newElection, setNewElection] = useState({\n        title: '',\n        description: '',\n        startTime: '',\n        endTime: ''\n      });\n      const [error, setError] = useState('');\n      const [success, setSuccess] = useState('');\n    const {createElection,isLoading}=useVoting()\n    const handleCreateElection = async (e) => {\n      e.preventDefault();\n      try {\n        setError('');\n        const startTimestamp = Math.floor(new Date(newElection.startTime).getTime() / 1000);\n        const endTimestamp = Math.floor(new Date(newElection.endTime).getTime() / 1000);\n        \n        await createElection(\n          newElection.title,\n          newElection.description,\n          startTimestamp,\n          endTimestamp\n        );\n        \n        setSuccess('Election created successfully!');\n        setNewElection({ title: '', description: '', startTime: '', endTime: '' });\n        setActiveTab('elections');\n        await loadElections(); // Reload data\n      } catch (err) {\n        console.error('Failed to create election:', err);\n        setError('Failed to create election: ' + err.message);\n      }\n    };\n\n    return (\n      <div className=\"max-w-2xl mx-auto\">\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Create New Election</h2>\n          \n          <form onSubmit={handleCreateElection} className=\"space-y-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Election Title\n              </label>\n              <input\n                type=\"text\"\n                value={newElection.title}\n                onChange={(e) => setNewElection({...newElection, title: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                required\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Description\n              </label>\n              <textarea\n                value={newElection.description}\n                onChange={(e) => setNewElection({...newElection, description: e.target.value})}\n                rows=\"3\"\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                required\n              />\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Start Time\n                </label>\n                <input\n                  type=\"datetime-local\"\n                  value={newElection.startTime}\n                  onChange={(e) => setNewElection({...newElection, startTime: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  required\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  End Time\n                </label>\n                <input\n                  type=\"datetime-local\"\n                  value={newElection.endTime}\n                  onChange={(e) => setNewElection({...newElection, endTime: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  required\n                />\n              </div>\n            </div>\n            \n            <div className=\"flex space-x-4\">\n              <button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"flex-1 bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 font-medium disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isLoading ? (\n                  <>\n                    <Loader2 className=\"h-4 w-4 animate-spin\" />\n                    <span>Creating...</span>\n                  </>\n                ) : (\n                  <span>Create Election</span>\n                )}\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => setActiveTab('elections')}\n                className=\"flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-lg hover:bg-gray-400 font-medium\"\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  export default CreateElectionForm"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":["file:///home/humayou/Desktop/Decentralized-Voting-System/src/components/AddCandidateForm.jsx"],"sourcesContent":["import { useVoting } from \"@/context/ContractContext\";\nimport { useEffect, useState } from \"react\";\n\n   // Add Candidate Form\n   const AddCandidateForm = () => {\n     const {addCandidate,isLoading,isConnected,getCurrentElectionId,getElectionDetails,getElectionCandidates}=useVoting()\n     const [error, setError] = useState('');\n    const [elections, setElections] = useState([]);\n    const [dashboardStats, setDashboardStats] = useState({\n        totalElections: 0,\n        activeElections: 0,\n        totalCandidates: 0,\n        totalVotes: 0\n      });\n     const [newCandidate, setNewCandidate] = useState({\n       name: '',\n       partyName: '',\n       symbol: '',\n       imageHash: '',\n       electionId: ''\n     });\n\n\n    const handleAddCandidate = async (e) => {\n      e.preventDefault();\n      try {\n        setError('');\n        await addCandidate(\n          parseInt(newCandidate.electionId),\n          newCandidate.name,\n          newCandidate.imageHash,\n          newCandidate.partyName,\n          newCandidate.symbol\n        );\n        \n        setSuccess('Candidate added successfully!');\n        setNewCandidate({ name: '', partyName: '', symbol: '', imageHash: '', electionId: '' });\n        setActiveTab('candidates');\n        await loadCandidates(); // Reload data\n      } catch (err) {\n        console.error('Failed to add candidate:', err);\n        setError('Failed to add candidate: ' + err.message);\n      }\n    };\n    useEffect(() => {\n        if (isConnected) {\n          loadElections();\n        }\n      }, [isConnected]);\n      const updateDashboardStats = (electionsList) => {\n        const stats = {\n          totalElections: electionsList.length,\n          activeElections: electionsList.filter(e => e.isActive).length,\n          totalCandidates: electionsList.reduce((sum, e) => sum + e.candidatesCount, 0),\n          totalVotes: electionsList.reduce((sum, e) => sum + parseInt(e.totalVotes), 0)\n        };\n        setDashboardStats(stats);\n      };\n  \n const loadElections = async () => {\n      try {\n        if (!isConnected) return;\n        \n        const currentId = await getCurrentElectionId();\n        const electionsList = [];\n        \n        for (let i = 1; i <= parseInt(currentId); i++) {\n          try {\n            const election = await getElectionDetails(i);\n            const candidateIds = await getElectionCandidates(i);\n            \n            electionsList.push({\n              ...election,\n              candidatesCount: candidateIds.length\n            });\n          } catch (err) {\n            console.log(`Election ${i} not found or error:`, err);\n          }\n        }\n        \n        setElections(electionsList);\n        updateDashboardStats(electionsList);\n      } catch (err) {\n        console.error('Error loading elections:', err);\n        setError('Failed to load elections');\n      }\n    };\n    return (\n      <div className=\"max-w-2xl mx-auto\">\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Add New Candidate</h2>\n          \n          <form onSubmit={handleAddCandidate} className=\"space-y-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Election\n              </label>\n              <select\n                value={newCandidate.electionId}\n                onChange={(e) => setNewCandidate({...newCandidate, electionId: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                required\n              >\n                <option value=\"\">Select Election</option>\n                {elections.map(election => (\n                  <option key={election.electionId} value={election.electionId}>\n                    {election.title}\n                  </option>\n                ))}\n              </select>\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Candidate Name\n              </label>\n              <input\n                type=\"text\"\n                value={newCandidate.name}\n                onChange={(e) => setNewCandidate({...newCandidate, name: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                required\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Party Name\n              </label>\n              <input\n                type=\"text\"\n                value={newCandidate.partyName}\n                onChange={(e) => setNewCandidate({...newCandidate, partyName: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                required\n              />\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Symbol (Emoji)\n                </label>\n                <input\n                  type=\"text\"\n                  value={newCandidate.symbol}\n                  onChange={(e) => setNewCandidate({...newCandidate, symbol: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"🐴\"\n                  required\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Image Hash (IPFS)\n                </label>\n                <input\n                  type=\"text\"\n                  value={newCandidate.imageHash}\n                  onChange={(e) => setNewCandidate({...newCandidate, imageHash: e.target.value})}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"QmX123...\"\n                  required\n                />\n              </div>\n            </div>\n            \n            <div className=\"flex space-x-4\">\n              <button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"flex-1 bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 font-medium disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center space-x-2\"\n              >\n                {isLoading ? (\n                  <>\n                    <Loader2 className=\"h-4 w-4 animate-spin\" />\n                    <span>Adding...</span>\n                  </>\n                ) : (\n                  <span>Add Candidate</span>\n                )}\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => setActiveTab('candidates')}\n                className=\"flex-1 bg-gray-300 text-gray-700 py-2 px-4 rounded-lg hover:bg-gray-400 font-medium\"\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  };\nexport default AddCandidateForm"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 624, "column": 0}, "map": {"version":3,"sources":["file:///home/humayou/Desktop/Decentralized-Voting-System/src/app/electioncommission/page.jsx"],"sourcesContent":["'use client'\nimport { useState, useEffect } from 'react';\nimport { useVoting } from '@/context/ContractContext';\nimport CreateElectionForm from '@/components/CreateElectionForm';\nimport AddCandidateForm from '@/components/AddCandidateForm';\n\n// Import separated components\nimport WalletConnection from './components/WalletConnection';\nimport AlertMessage from './components/AlertMessage';\nimport DashboardHeader from './components/DashboardHeader';\nimport NavigationSidebar from './components/NavigationSidebar';\nimport DashboardOverview from './components/DashboardOverview';\nimport ElectionManagement from './components/ElectionManagement';\nimport CandidateManagement from './components/CandidateManagement';\nimport LoadingSpinner from './components/LoadingSpinner';\n\nconst ElectionCommissionDashboard = () => {\n  const {\n    account,\n    isConnected,\n    isLoading,\n    connectWallet,\n    getElectionDetails,\n    getCandidateDetails,\n    getElectionCandidates,\n    getElectionResults,\n    getCurrentElectionId,\n    setElectionStatus,\n    setCandidateStatus\n  } = useVoting();\n\n  const [activeTab, setActiveTab] = useState('dashboard');\n  const [elections, setElections] = useState([]);\n  const [candidates, setCandidates] = useState([]);\n  const [dashboardStats, setDashboardStats] = useState({\n    totalElections: 0,\n    activeElections: 0,\n    totalCandidates: 0,\n    totalVotes: 0\n  });\n  \n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Update dashboard statistics\n  const updateDashboardStats = (electionsList) => {\n    const totalElections = electionsList.length;\n    const activeElections = electionsList.filter(e => e.isActive).length;\n    const totalVotes = electionsList.reduce((sum, e) => sum + parseInt(e.totalVotes || 0), 0);\n    \n    setDashboardStats({\n      totalElections,\n      activeElections,\n      totalCandidates: candidates.length,\n      totalVotes\n    });\n  };\n\n  // Load elections from blockchain\n  const loadElections = async () => {\n    try {\n      if (!isConnected) return;\n      \n      const currentId = await getCurrentElectionId();\n      const electionsList = [];\n      \n      for (let i = 1; i <= parseInt(currentId); i++) {\n        try {\n          const election = await getElectionDetails(i);\n          const candidateIds = await getElectionCandidates(i);\n          \n          electionsList.push({\n            ...election,\n            candidatesCount: candidateIds.length\n          });\n        } catch (err) {\n          console.log(`Election ${i} not found or error:`, err);\n        }\n      }\n      \n      setElections(electionsList);\n      updateDashboardStats(electionsList);\n    } catch (err) {\n      console.error('Error loading elections:', err);\n      setError('Failed to load elections');\n    }\n  };\n\n  // Load candidates from blockchain\n  const loadCandidates = async () => {\n    try {\n      if (!isConnected || elections.length === 0) return;\n      \n      const allCandidates = [];\n      \n      for (const election of elections) {\n        try {\n          const candidateIds = await getElectionCandidates(election.electionId);\n          \n          for (const candidateId of candidateIds) {\n            try {\n              const candidate = await getCandidateDetails(candidateId);\n              allCandidates.push({\n                ...candidate,\n                electionId: election.electionId\n              });\n            } catch (err) {\n              console.log(`Candidate ${candidateId} not found:`, err);\n            }\n          }\n        } catch (err) {\n          console.log(`Error loading candidates for election ${election.electionId}:`, err);\n        }\n      }\n      \n      setCandidates(allCandidates);\n    } catch (err) {\n      console.error('Error loading candidates:', err);\n      setError('Failed to load candidates');\n    }\n  };\n\n  // Load data when connected\n  useEffect(() => {\n    if (isConnected) {\n      loadElections();\n    }\n  }, [isConnected]);\n\n  useEffect(() => {\n    if (elections.length > 0) {\n      loadCandidates();\n    }\n  }, [elections]);\n\n  // Update stats when candidates change\n  useEffect(() => {\n    if (elections.length > 0) {\n      updateDashboardStats(elections);\n    }\n  }, [candidates]);\n\n  // Clear messages after 5 seconds\n  useEffect(() => {\n    if (error || success) {\n      const timer = setTimeout(() => {\n        setError('');\n        setSuccess('');\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [error, success]);\n\n  // Content renderer\n  const renderContent = () => {\n    switch(activeTab) {\n      case 'dashboard':\n        return (\n          <DashboardOverview \n            dashboardStats={dashboardStats}\n            elections={elections}\n            candidates={candidates}\n          />\n        );\n      case 'elections':\n        return (\n          <ElectionManagement \n            elections={elections}\n            setActiveTab={setActiveTab}\n            setElectionStatus={setElectionStatus}\n            setError={setError}\n            setSuccess={setSuccess}\n            isLoading={isLoading}\n          />\n        );\n      case 'candidates':\n        return (\n          <CandidateManagement \n            candidates={candidates}\n            setActiveTab={setActiveTab}\n            setCandidateStatus={setCandidateStatus}\n            setError={setError}\n            setSuccess={setSuccess}\n            isLoading={isLoading}\n            loadCandidates={loadCandidates}\n          />\n        );\n      case 'create-election':\n        return <CreateElectionForm />;\n      case 'add-candidate':\n        return <AddCandidateForm />;\n      default:\n        return (\n          <DashboardOverview \n            dashboardStats={dashboardStats}\n            elections={elections}\n            candidates={candidates}\n          />\n        );\n    }\n  };\n\n  // Show wallet connection if not connected\n  if (!isConnected) {\n    return <WalletConnection connectWallet={connectWallet} isLoading={isLoading} />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      {/* Alert Messages */}\n      {error && (\n        <AlertMessage \n          type=\"error\" \n          message={error} \n          onClose={() => setError('')} \n        />\n      )}\n      {success && (\n        <AlertMessage \n          type=\"success\" \n          message={success} \n          onClose={() => setSuccess('')} \n        />\n      )}\n\n      {/* Header */}\n      <DashboardHeader account={account} />\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"flex flex-col lg:flex-row gap-8\">\n          {/* Sidebar Navigation */}\n          <NavigationSidebar activeTab={activeTab} setActiveTab={setActiveTab} />\n\n          {/* Main Content */}\n          <div className=\"flex-1\">\n            {isLoading && activeTab !== 'dashboard' ? (\n              <LoadingSpinner />\n            ) : (\n              renderContent()\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ElectionCommissionDashboard;"],"names":[],"mappings":"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","debugId":null}}]
}