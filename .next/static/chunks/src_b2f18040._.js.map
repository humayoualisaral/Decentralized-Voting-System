{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/humayou/Desktop/Decentralized-Voting-System/src/components/ElectionCard.jsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { Calendar, Users, CheckCircle, Clock, Eye } from 'lucide-react';\n\nconst ElectionCard = ({ election, onSelect, showInactive = false }) => {\n  const startDate = new Date(parseInt(election.startTime) * 1000);\n  const endDate = new Date(parseInt(election.endTime) * 1000);\n  const now = new Date();\n  \n  const isActive = election.isActive && now >= startDate && now <= endDate;\n  const hasEnded = now > endDate;\n  const hasNotStarted = now < startDate;\n  \n  const getStatusInfo = () => {\n    if (!election.isActive) {\n      return { text: 'Inactive', color: 'bg-gray-100 text-gray-800', icon: null };\n    }\n    if (hasEnded) {\n      return { text: 'Ended', color: 'bg-red-100 text-red-800', icon: null };\n    }\n    if (hasNotStarted) {\n      return { text: 'Upcoming', color: 'bg-yellow-100 text-yellow-800', icon: Clock };\n    }\n    return { text: 'Active', color: 'bg-green-100 text-green-800', icon: null };\n  };\n\n  const statusInfo = getStatusInfo();\n  const StatusIcon = statusInfo.icon;\n\n  return (\n    <div className={`bg-white rounded-lg shadow-sm border transition-all duration-200 hover:shadow-md ${\n      isActive ? 'border-l-4 border-l-green-500' : 'border-gray-200'\n    }`}>\n      <div className=\"p-6\">\n        {/* Header */}\n        <div className=\"flex items-start justify-between mb-4\">\n          <div className=\"flex-1\">\n            <h3 className=\"text-xl font-bold text-gray-900 mb-1 line-clamp-2\">\n              {election.title}\n            </h3>\n            <p className=\"text-gray-600 text-sm line-clamp-2\">\n              {election.description}\n            </p>\n          </div>\n          <div className={`px-2 py-1 rounded-full text-xs font-medium whitespace-nowrap ml-2 flex items-center gap-1 ${statusInfo.color}`}>\n            {StatusIcon && <StatusIcon className=\"w-3 h-3\" />}\n            {statusInfo.text}\n          </div>\n        </div>\n\n        {/* Election Info */}\n        <div className=\"space-y-3 mb-6\">\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <Calendar className=\"w-4 h-4\" />\n            <span>\n              {startDate.toLocaleDateString()} - {endDate.toLocaleDateString()}\n            </span>\n          </div>\n          \n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <Users className=\"w-4 h-4\" />\n            <span>{election.totalVotes || '0'} votes cast</span>\n          </div>\n        </div>\n\n        {/* Action Button */}\n        <button\n          onClick={() => onSelect(election)}\n          className={`w-full py-2 px-4 rounded-lg font-medium transition-colors flex items-center justify-center gap-2 ${\n            isActive\n              ? 'bg-blue-600 hover:bg-blue-700 text-white'\n              : 'bg-gray-100 hover:bg-gray-200 text-gray-700'\n          }`}\n        >\n          <Eye className=\"w-4 h-4\" />\n          {isActive ? 'View & Vote' : 'View Details'}\n        </button>\n      </div>\n\n      {/* Progress Bar for Active Elections */}\n      {isActive && (\n        <div className=\"px-6 pb-4\">\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n            <div \n              className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n              style={{\n                width: `${Math.min(100, (now - startDate) / (endDate - startDate) * 100)}%`\n              }}\n            ></div>\n          </div>\n          <div className=\"flex justify-between text-xs text-gray-500 mt-1\">\n            <span>Started</span>\n            <span>\n              {Math.ceil((endDate - now) / (1000 * 60 * 60 * 24))} days left\n            </span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ElectionCard;"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAAA;AAHA;;;;AAKA,MAAM,eAAe;QAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,eAAe,KAAK,EAAE;IAChE,MAAM,YAAY,IAAI,KAAK,SAAS,SAAS,SAAS,IAAI;IAC1D,MAAM,UAAU,IAAI,KAAK,SAAS,SAAS,OAAO,IAAI;IACtD,MAAM,MAAM,IAAI;IAEhB,MAAM,WAAW,SAAS,QAAQ,IAAI,OAAO,aAAa,OAAO;IACjE,MAAM,WAAW,MAAM;IACvB,MAAM,gBAAgB,MAAM;IAE5B,MAAM,gBAAgB;QACpB,IAAI,CAAC,SAAS,QAAQ,EAAE;YACtB,OAAO;gBAAE,MAAM;gBAAY,OAAO;gBAA6B,MAAM;YAAK;QAC5E;QACA,IAAI,UAAU;YACZ,OAAO;gBAAE,MAAM;gBAAS,OAAO;gBAA2B,MAAM;YAAK;QACvE;QACA,IAAI,eAAe;YACjB,OAAO;gBAAE,MAAM;gBAAY,OAAO;gBAAiC,MAAM,uMAAA,CAAA,QAAK;YAAC;QACjF;QACA,OAAO;YAAE,MAAM;YAAU,OAAO;YAA+B,MAAM;QAAK;IAC5E;IAEA,MAAM,aAAa;IACnB,MAAM,aAAa,WAAW,IAAI;IAElC,qBACE,6LAAC;QAAI,WAAW,AAAC,oFAEhB,OADC,WAAW,kCAAkC;;0BAE7C,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDACX,SAAS,KAAK;;;;;;kDAEjB,6LAAC;wCAAE,WAAU;kDACV,SAAS,WAAW;;;;;;;;;;;;0CAGzB,6LAAC;gCAAI,WAAW,AAAC,6FAA6G,OAAjB,WAAW,KAAK;;oCAC1H,4BAAc,6LAAC;wCAAW,WAAU;;;;;;oCACpC,WAAW,IAAI;;;;;;;;;;;;;kCAKpB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,6MAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;kDACpB,6LAAC;;4CACE,UAAU,kBAAkB;4CAAG;4CAAI,QAAQ,kBAAkB;;;;;;;;;;;;;0CAIlE,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,uMAAA,CAAA,QAAK;wCAAC,WAAU;;;;;;kDACjB,6LAAC;;4CAAM,SAAS,UAAU,IAAI;4CAAI;;;;;;;;;;;;;;;;;;;kCAKtC,6LAAC;wBACC,SAAS,IAAM,SAAS;wBACxB,WAAW,AAAC,oGAIX,OAHC,WACI,6CACA;;0CAGN,6LAAC,mMAAA,CAAA,MAAG;gCAAC,WAAU;;;;;;4BACd,WAAW,gBAAgB;;;;;;;;;;;;;YAK/B,0BACC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BACC,WAAU;4BACV,OAAO;gCACL,OAAO,AAAC,GAAiE,OAA/D,KAAK,GAAG,CAAC,KAAK,CAAC,MAAM,SAAS,IAAI,CAAC,UAAU,SAAS,IAAI,MAAK;4BAC3E;;;;;;;;;;;kCAGJ,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;0CAAK;;;;;;0CACN,6LAAC;;oCACE,KAAK,IAAI,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE;oCAAG;;;;;;;;;;;;;;;;;;;;;;;;;AAOlE;KAhGM;uCAkGS","debugId":null}},
    {"offset": {"line": 273, "column": 0}, "map": {"version":3,"sources":["file:///home/humayou/Desktop/Decentralized-Voting-System/src/components/CandidateUserCard.jsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { Vote, User, Calendar, BarChart3, ImageIcon } from 'lucide-react';\n\nconst CandidateCard = ({ \n  candidate, \n  onVoteNow, \n  canVote = false, \n  showResults = false, \n  totalVotes = 0 \n}) => {\n  const [imageError, setImageError] = useState(false);\n  const [imageLoading, setImageLoading] = useState(true);\n  const [symbolError, setSymbolError] = useState(false);\n  const [symbolLoading, setSymbolLoading] = useState(true);\n  \n  const voteCount = parseInt(candidate.voteCount || 0);\n  const votePercentage = totalVotes > 0 ? ((voteCount / totalVotes) * 100).toFixed(1) : 0;\n  const candidateDate = new Date(parseInt(candidate.timestamp) * 1000);\n\n  // IPFS Gateway URLs (you can configure multiple fallbacks)\n  const getIPFSUrl = (hash) => {\n    if (!hash || hash === '0x' || hash === '') return null;\n    \n    // Remove 'Qm' prefix if it exists and hash starts with it\n    const cleanHash = hash.startsWith('Qm') ? hash : hash.replace(/^0x/, '');\n    \n    // Primary IPFS gateways (you can add more for better reliability)\n    const gateways = [\n      `https://ipfs.io/ipfs/${cleanHash}`,\n      `https://gateway.pinata.cloud/ipfs/${cleanHash}`,\n      `https://cloudflare-ipfs.com/ipfs/${cleanHash}`,\n      `https://dweb.link/ipfs/${cleanHash}`\n    ];\n    \n    return gateways[0]; // Use primary gateway, can implement fallback logic\n  };\n\n  // Check if string is IPFS hash or regular emoji/text\n  const isIPFSHash = (str) => {\n    if (!str || typeof str !== 'string') return false;\n    // Check if it looks like an IPFS hash (starts with Qm and is long enough)\n    return str.startsWith('Qm') || (str.startsWith('0x') && str.length > 10);\n  };\n\n  const imageUrl = getIPFSUrl(candidate.imageHash);\n  const hasValidImage = imageUrl && !imageError;\n  \n  const symbolUrl = isIPFSHash(candidate.symbol) ? getIPFSUrl(candidate.symbol) : null;\n  const hasValidSymbol = symbolUrl && !symbolError;\n\n  const handleImageError = () => {\n    setImageError(true);\n    setImageLoading(false);\n  };\n\n  const handleImageLoad = () => {\n    setImageLoading(false);\n    setImageError(false);\n  };\n\n  const handleSymbolError = () => {\n    setSymbolError(true);\n    setSymbolLoading(false);\n  };\n\n  const handleSymbolLoad = () => {\n    setSymbolLoading(false);\n    setSymbolError(false);\n  };\n\n  // Fallback Avatar Component\n  const AvatarFallback = () => (\n    <div className=\"w-16 h-16 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white text-xl font-bold flex-shrink-0\">\n      {candidate.name.charAt(0).toUpperCase()}\n    </div>\n  );\n\n  // IPFS Image Component\n  const IPFSImage = () => (\n    <div className=\"w-16 h-16 rounded-full overflow-hidden flex-shrink-0 bg-gray-100 relative\">\n      {imageLoading && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-gray-100\">\n          <div className=\"w-4 h-4 border-2 border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\n        </div>\n      )}\n      <img\n        src={imageUrl}\n        alt={`${candidate.name} profile`}\n        className={`w-full h-full object-cover transition-opacity duration-200 ${\n          imageLoading ? 'opacity-0' : 'opacity-100'\n        }`}\n        onError={handleImageError}\n        onLoad={handleImageLoad}\n        style={{ display: imageError ? 'none' : 'block' }}\n      />\n      {imageError && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-gray-100 text-gray-400\">\n          <ImageIcon className=\"w-6 h-6\" />\n        </div>\n      )}\n    </div>\n  );\n\n  // Symbol Component (handles both IPFS and regular emoji/text)\n  const SymbolDisplay = () => {\n    if (hasValidSymbol) {\n      return (\n        <div className=\"relative\">\n          {symbolLoading && (\n            <div className=\"absolute inset-0 flex items-center justify-center\">\n              <div className=\"w-3 h-3 border-2 border-blue-600 border-t-transparent rounded-full animate-spin\"></div>\n            </div>\n          )}\n          <img\n            src={symbolUrl}\n            alt=\"Party Symbol\"\n            className={`w-8 h-8 object-contain transition-opacity duration-200 ${\n              symbolLoading ? 'opacity-0' : 'opacity-100'\n            }`}\n            onError={handleSymbolError}\n            onLoad={handleSymbolLoad}\n            style={{ display: symbolError ? 'none' : 'block' }}\n          />\n          {symbolError && (\n            <span className=\"text-2xl\" title=\"Symbol failed to load\">\n              🏛️\n            </span>\n          )}\n        </div>\n      );\n    } else {\n      // Regular emoji or text symbol\n      return (\n        <span className=\"text-2xl\" title=\"Party Symbol\">\n          {candidate.symbol || '🏛️'}\n        </span>\n      );\n    }\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 hover:shadow-md transition-all duration-200\">\n      <div className=\"p-6\">\n        {/* Candidate Header */}\n        <div className=\"flex items-center gap-4 mb-4\">\n          {/* Avatar - IPFS Image or Fallback */}\n          {hasValidImage ? <IPFSImage /> : <AvatarFallback />}\n          \n          {/* Candidate Info */}\n          <div className=\"flex-1 min-w-0\">\n            <h3 className=\"text-lg font-bold text-gray-900 truncate\">\n              {candidate.name}\n            </h3>\n            <p className=\"text-gray-600 text-sm truncate\">\n              {candidate.partyName}\n            </p>\n            <div className=\"flex items-center gap-2 mt-1\">\n              <SymbolDisplay />\n              <span className=\"text-xs text-gray-500\">\n                ID: {candidate.candidateId}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        {/* Candidate Details */}\n        <div className=\"space-y-3 mb-4\">\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <Calendar className=\"w-4 h-4\" />\n            <span>Added: {candidateDate.toLocaleDateString()}</span>\n          </div>\n          \n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <User className=\"w-4 h-4\" />\n            <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n              candidate.isActive \n                ? 'bg-green-100 text-green-800' \n                : 'bg-red-100 text-red-800'\n            }`}>\n              {candidate.isActive ? 'Active' : 'Inactive'}\n            </span>\n          </div>\n        </div>\n\n        {/* Vote Count & Results */}\n        {showResults && (\n          <div className=\"mb-4 p-3 bg-gray-50 rounded-lg\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <div className=\"flex items-center gap-2\">\n                <BarChart3 className=\"w-4 h-4 text-blue-600\" />\n                <span className=\"text-sm font-medium text-gray-700\">Results</span>\n              </div>\n              <span className=\"text-lg font-bold text-gray-900\">\n                {voteCount} votes\n              </span>\n            </div>\n            \n            {/* Vote Percentage Bar */}\n            <div className=\"w-full bg-gray-200 rounded-full h-2 mb-1\">\n              <div \n                className=\"bg-blue-600 h-2 rounded-full transition-all duration-500\"\n                style={{ width: `${votePercentage}%` }}\n              ></div>\n            </div>\n            \n            <div className=\"flex justify-between text-xs text-gray-500\">\n              <span>{votePercentage}% of total votes</span>\n              <span>{totalVotes} total</span>\n            </div>\n          </div>\n        )}\n\n        {/* Action Button */}\n        <div className=\"flex gap-2\">\n          {canVote && candidate.isActive ? (\n            <button\n              onClick={() => onVoteNow(candidate)}\n              className=\"flex-1 bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg transition-colors flex items-center justify-center gap-2\"\n            >\n              <Vote className=\"w-4 h-4\" />\n              Vote Now\n            </button>\n          ) : (\n            <button\n              disabled\n              className=\"flex-1 bg-gray-100 text-gray-500 font-medium py-2 px-4 rounded-lg cursor-not-allowed flex items-center justify-center gap-2\"\n            >\n              <Vote className=\"w-4 h-4\" />\n              {!candidate.isActive ? 'Inactive' : 'Voting Closed'}\n            </button>\n          )}\n        </div>\n\n        {/* Image Hash Info */}\n        {(candidate.imageHash && candidate.imageHash !== '0x' && candidate.imageHash !== '') && (\n          <div className=\"mt-3 pt-3 border-t border-gray-100\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex-1\">\n                <p className=\"text-xs text-gray-400 truncate\" title={candidate.imageHash}>\n                  Image: {candidate.imageHash.slice(0, 15)}...\n                </p>\n                {isIPFSHash(candidate.symbol) && (\n                  <p className=\"text-xs text-gray-400 truncate mt-1\" title={candidate.symbol}>\n                    Symbol: {candidate.symbol.slice(0, 15)}...\n                  </p>\n                )}\n              </div>\n              <div className=\"flex flex-col items-end space-y-1\">\n                {imageError && (\n                  <span className=\"text-xs text-red-500\">Image failed</span>\n                )}\n                {symbolError && isIPFSHash(candidate.symbol) && (\n                  <span className=\"text-xs text-red-500\">Symbol failed</span>\n                )}\n                {!imageError && imageUrl && (\n                  <a \n                    href={imageUrl} \n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\"\n                    className=\"text-xs text-blue-500 hover:text-blue-700\"\n                  >\n                    View Image\n                  </a>\n                )}\n                {!symbolError && symbolUrl && (\n                  <a \n                    href={symbolUrl} \n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\"\n                    className=\"text-xs text-blue-500 hover:text-blue-700\"\n                  >\n                    View Symbol\n                  </a>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default CandidateCard;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 858, "column": 0}, "map": {"version":3,"sources":["file:///home/humayou/Desktop/Decentralized-Voting-System/src/components/CandidateList.jsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useVoting } from '@/context/ContractContext';\nimport CandidateCard from '@/components/CandidateUserCard';\nimport { Users, Trophy, BarChart3, Loader2, Hash, Fingerprint, X, AlertCircle } from 'lucide-react';\n\nconst CandidateList = ({ electionId, isElectionActive }) => {\n  const {\n    getElectionCandidates,\n    getCandidateDetails,\n    castVote,\n    isLoading,\n    account\n  } = useVoting();\n\n  const [candidates, setCandidates] = useState([]);\n  const [selectedCandidate, setSelectedCandidate] = useState(null);\n  const [showResults, setShowResults] = useState(false);\n  const [loadingCandidates, setLoadingCandidates] = useState(false);\n  const [votingInProgress, setVotingInProgress] = useState(false);\n\n  // CNIC Verification states\n  const [showCnicModal, setShowCnicModal] = useState(false);\n  const [cnicNumber, setCnicNumber] = useState('');\n  const [cnicError, setCnicError] = useState('');\n  const [verificationStep, setVerificationStep] = useState('cnic'); // 'cnic', 'fingerprint', 'verifying'\n  const [userRegistration, setUserRegistration] = useState(null);\n  const [biometricData, setBiometricData] = useState(null);\n  const [biometricStatus, setBiometricStatus] = useState('');\n  const [isBiometricLoading, setIsBiometricLoading] = useState(false);\n\n  // Fetch candidates from contract\n  useEffect(() => {\n    const fetchCandidates = async () => {\n      if (!electionId) return;\n      \n      try {\n        setLoadingCandidates(true);\n        \n        const candidateIds = await getElectionCandidates(electionId);\n        const candidatePromises = candidateIds.map(async (candidateId) => {\n          return await getCandidateDetails(candidateId);\n        });\n        \n        const candidateDetails = await Promise.all(candidatePromises);\n        setCandidates(candidateDetails.filter(candidate => candidate.isActive));\n        \n      } catch (error) {\n        console.error('Error fetching candidates:', error);\n        setCandidates([]);\n      } finally {\n        setLoadingCandidates(false);\n      }\n    };\n\n    fetchCandidates();\n  }, [electionId, getElectionCandidates, getCandidateDetails]);\n\n  // CNIC verification functions\n  const handleVoteNow = (candidate) => {\n    setSelectedCandidate(candidate);\n    setShowCnicModal(true);\n    setVerificationStep('cnic');\n    setCnicNumber('');\n    setCnicError('');\n    setUserRegistration(null);\n    setBiometricData(null);\n  };\n\n  const formatCNIC = (value) => {\n    const digits = value.replace(/\\D/g, '');\n    return digits.slice(0, 13);\n  };\n\n  const handleCnicSubmit = async () => {\n    if (!cnicNumber || cnicNumber.length !== 13) {\n      setCnicError('CNIC must be exactly 13 digits');\n      return;\n    }\n\n    try {\n      setVotingInProgress(true);\n      setCnicError('');\n\n      // Verify CNIC with backend\n      const response = await fetch(`/api/registration/${cnicNumber}`);\n      const result = await response.json();\n\n      if (!response.ok) {\n        throw new Error(result.message || 'CNIC verification failed');\n      }\n\n      if (!result.data.isVerified) {\n        throw new Error('CNIC is not verified. Please complete your NADRA registration first.');\n      }\n\n      setUserRegistration(result.data);\n      setVerificationStep('fingerprint');\n      setBiometricStatus('✅ CNIC verified! Now register your fingerprint to proceed.');\n\n    } catch (error) {\n      console.error('CNIC verification error:', error);\n      setCnicError(error.message);\n    } finally {\n      setVotingInProgress(false);\n    }\n  };\n\n  // Biometric helper functions\n  const generateSecureChallenge = () => {\n    const array = new Uint8Array(32);\n    crypto.getRandomValues(array);\n    return array;\n  };\n\n  const generateUserId = () => {\n    const array = new Uint8Array(16);\n    crypto.getRandomValues(array);\n    return array;\n  };\n\n  const arrayBufferToBase64 = (buffer) => {\n    const bytes = new Uint8Array(buffer);\n    let binary = '';\n    for (let i = 0; i < bytes.byteLength; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return btoa(binary);\n  };\n\n  const handleBiometricVerification = async () => {\n    try {\n      if (!window.PublicKeyCredential) {\n        throw new Error('WebAuthn not supported in this browser');\n      }\n\n      const available = await PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable();\n      if (!available) {\n        throw new Error('No biometric authenticator detected on this device');\n      }\n\n      setIsBiometricLoading(true);\n      setBiometricStatus('🔐 Place your finger on the biometric sensor...');\n\n      const userId = generateUserId();\n      const challenge = generateSecureChallenge();\n\n      const registrationOptions = {\n        challenge: challenge,\n        rp: {\n          name: \"Voting System\",\n          id: window.location.hostname || \"localhost\",\n        },\n        user: {\n          id: userId,\n          name: `${userRegistration.firstName}.${userRegistration.lastName}@voting.gov.pk`,\n          displayName: `${userRegistration.firstName} ${userRegistration.lastName}`,\n        },\n        pubKeyCredParams: [\n          { alg: -7, type: \"public-key\" },\n          { alg: -35, type: \"public-key\" },\n          { alg: -36, type: \"public-key\" },\n          { alg: -257, type: \"public-key\" },\n        ],\n        authenticatorSelection: {\n          authenticatorAttachment: \"platform\",\n          userVerification: \"required\",\n          requireResidentKey: true,\n          residentKey: \"required\"\n        },\n        timeout: 60000,\n        attestation: \"direct\",\n        excludeCredentials: []\n      };\n\n      const credential = await navigator.credentials.create({\n        publicKey: registrationOptions\n      });\n\n      if (!credential) {\n        throw new Error('No credential returned from biometric registration');\n      }\n\n      const credentialInfo = {\n        id: credential.id,\n        rawId: arrayBufferToBase64(credential.rawId),\n        type: credential.type,\n        challenge: arrayBufferToBase64(challenge),\n        userId: arrayBufferToBase64(userId),\n        timestamp: new Date().toISOString(),\n        cnicNumber: cnicNumber\n      };\n\n      setBiometricData(credentialInfo);\n      setBiometricStatus('✅ Fingerprint verified successfully!');\n      setVerificationStep('verifying');\n\n      // Proceed with vote casting\n      await castVoteWithVerification(credentialInfo);\n\n    } catch (error) {\n      console.error('Biometric verification failed:', error);\n      setBiometricStatus('❌ Fingerprint verification failed');\n      \n      let errorMessage = '🚫 FINGERPRINT VERIFICATION FAILED\\n\\n';\n      \n      if (error.name === 'NotAllowedError') {\n        errorMessage += '❌ Verification cancelled or failed\\n\\n🔧 Please try again and complete the biometric prompt';\n      } else if (error.name === 'SecurityError') {\n        errorMessage += '❌ Security requirements not met\\n\\n🔧 Ensure you\\'re using HTTPS and the site is trusted';\n      } else {\n        errorMessage += `❌ Error: ${error.message || 'Unknown biometric error'}`;\n      }\n      \n      alert(errorMessage);\n    } finally {\n      setIsBiometricLoading(false);\n    }\n  };\n\n  const castVoteWithVerification = async (biometricCredential) => {\n    try {\n      setVotingInProgress(true);\n      setBiometricStatus('🔐 Verifying biometric data with backend...');\n\n      // First, verify biometric data with backend\n      const verificationResponse = await fetch('/api/vote/verify-biometric', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          cnicNumber: cnicNumber,\n          biometricData: biometricCredential,\n          electionId: electionId,\n          candidateId: selectedCandidate.candidateId\n        }),\n      });\n\n      const verificationResult = await verificationResponse.json();\n\n      if (!verificationResponse.ok) {\n        throw new Error(verificationResult.message || 'Biometric verification failed');\n      }\n\n      setBiometricStatus('✅ Biometric verified! Casting vote on blockchain...');\n\n      // Use the verification hash from backend for blockchain transaction\n      const fingerprintVerification = verificationResult.data.verificationHash;\n\n      // Cast vote directly to smart contract\n      const voteReceipt = await castVote(\n        electionId,\n        selectedCandidate.candidateId,\n        fingerprintVerification\n      );\n\n      setBiometricStatus('🎉 Vote successfully recorded on blockchain!');\n\n      // Refresh candidates to get updated vote counts from blockchain\n      const candidateIds = await getElectionCandidates(electionId);\n      const candidatePromises = candidateIds.map(async (candidateId) => {\n        return await getCandidateDetails(candidateId);\n      });\n      const candidateDetails = await Promise.all(candidatePromises);\n      setCandidates(candidateDetails.filter(candidate => candidate.isActive));\n\n      setBiometricStatus('✅ Vote cast successfully!');\n      \n      // Show success message with verification details\n      alert(`✅ VOTE CAST SUCCESSFULLY!\\n\\n🎉 Your vote for ${selectedCandidate.name} has been recorded on the blockchain.\\n👤 Voter: ${verificationResult.data.voterName}\\n🆔 CNIC: ${verificationResult.data.cnicNumber}\\n🔗 Transaction Hash: ${voteReceipt.hash}\\n📅 Time: ${new Date().toLocaleString()}\\n\\n🔒 Your vote is secure, verified, and stored permanently on the blockchain.`);\n\n      // Close modal and reset\n      setTimeout(() => {\n        setShowCnicModal(false);\n        setSelectedCandidate(null);\n        resetVerificationState();\n      }, 2000);\n\n    } catch (error) {\n      console.error('Error in vote verification/casting:', error);\n      setBiometricStatus('❌ Vote casting failed');\n      \n      let errorMessage = '❌ VOTE CASTING FAILED\\n\\n';\n      \n      if (error.message.includes('already voted')) {\n        errorMessage += '🚫 You have already voted in this election.\\n\\n💡 Each voter can only vote once per election.';\n      } else if (error.message.includes('not verified')) {\n        errorMessage += '🚫 Your registration is not verified.\\n\\n💡 Please complete your NADRA verification first.';\n      } else if (error.message.includes('Rate limit')) {\n        errorMessage += '⏰ Too many verification attempts.\\n\\n🔄 Please wait a few minutes before trying again.';\n      } else if (error.message.includes('Biometric data is too old')) {\n        errorMessage += '⏱️ Biometric data expired.\\n\\n🔄 Please re-authenticate your fingerprint.';\n      } else if (error.message.includes('execution reverted')) {\n        errorMessage += '🚫 Smart contract rejected the vote.\\n\\n💡 You may have already voted or the election may be inactive.';\n      } else {\n        errorMessage += `💥 Error: ${error.message}\\n\\n🔄 Please try again or contact support.`;\n      }\n      \n      alert(errorMessage);\n    } finally {\n      setVotingInProgress(false);\n    }\n  };\n\n  const resetVerificationState = () => {\n    setCnicNumber('');\n    setCnicError('');\n    setVerificationStep('cnic');\n    setUserRegistration(null);\n    setBiometricData(null);\n    setBiometricStatus('');\n    setIsBiometricLoading(false);\n  };\n\n  const getTotalVotes = () => {\n    return candidates.reduce((total, candidate) => total + parseInt(candidate.voteCount || 0), 0);\n  };\n\n  const getLeadingCandidate = () => {\n    if (candidates.length === 0) return null;\n    return candidates.reduce((leading, candidate) => \n      parseInt(candidate.voteCount || 0) > parseInt(leading.voteCount || 0) ? candidate : leading\n    );\n  };\n\n  if (loadingCandidates) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"bg-white rounded-lg shadow-sm p-12 text-center\">\n          <Loader2 className=\"w-16 h-16 text-blue-600 mx-auto mb-4 animate-spin\" />\n          <h3 className=\"text-xl font-semibold text-gray-600 mb-2\">\n            Loading Candidates...\n          </h3>\n          <p className=\"text-gray-500\">\n            Fetching candidate information from the blockchain.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Election Stats */}\n      <div className=\"bg-white rounded-lg shadow-sm p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          <div className=\"text-center\">\n            <div className=\"flex items-center justify-center w-12 h-12 bg-blue-100 rounded-lg mx-auto mb-2\">\n              <Users className=\"w-6 h-6 text-blue-600\" />\n            </div>\n            <p className=\"text-2xl font-bold text-gray-900\">{candidates.length}</p>\n            <p className=\"text-sm text-gray-600\">Candidates</p>\n          </div>\n          \n          <div className=\"text-center\">\n            <div className=\"flex items-center justify-center w-12 h-12 bg-green-100 rounded-lg mx-auto mb-2\">\n              <BarChart3 className=\"w-6 h-6 text-green-600\" />\n            </div>\n            <p className=\"text-2xl font-bold text-gray-900\">{getTotalVotes()}</p>\n            <p className=\"text-sm text-gray-600\">Total Votes</p>\n          </div>\n          \n          <div className=\"text-center\">\n            <div className=\"flex items-center justify-center w-12 h-12 bg-yellow-100 rounded-lg mx-auto mb-2\">\n              <Trophy className=\"w-6 h-6 text-yellow-600\" />\n            </div>\n            <p className=\"text-lg font-bold text-gray-900 truncate\">\n              {getLeadingCandidate()?.name || 'TBD'}\n            </p>\n            <p className=\"text-sm text-gray-600\">Leading</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Results Toggle */}\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-2xl font-bold text-gray-900\">Candidates</h2>\n        <button\n          onClick={() => setShowResults(!showResults)}\n          className=\"flex items-center gap-2 text-blue-600 hover:text-blue-700 font-medium transition-colors\"\n        >\n          <BarChart3 className=\"w-4 h-4\" />\n          {showResults ? 'Hide Results' : 'Show Results'}\n        </button>\n      </div>\n\n      {/* Candidates Grid */}\n      {candidates.length === 0 ? (\n        <div className=\"bg-white rounded-lg shadow-sm p-12 text-center\">\n          <Users className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" />\n          <h3 className=\"text-xl font-semibold text-gray-600 mb-2\">\n            No Candidates Found\n          </h3>\n          <p className=\"text-gray-500\">\n            No candidates have been added to this election yet.\n          </p>\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {candidates.map((candidate) => (\n            <CandidateCard\n              key={candidate.candidateId}\n              candidate={candidate}\n              onVoteNow={handleVoteNow}\n              canVote={isElectionActive}\n              showResults={showResults}\n              totalVotes={getTotalVotes()}\n            />\n          ))}\n        </div>\n      )}\n\n      {/* CNIC Verification Modal */}\n      {showCnicModal && selectedCandidate && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-lg shadow-xl max-w-md w-full p-6 max-h-[90vh] overflow-y-auto\">\n            {/* Header */}\n            <div className=\"flex justify-between items-center mb-6\">\n              <h3 className=\"text-xl font-bold text-gray-900\">\n                Voter Verification\n              </h3>\n              <button\n                onClick={() => {\n                  setShowCnicModal(false);\n                  resetVerificationState();\n                }}\n                disabled={votingInProgress}\n                className=\"text-gray-400 hover:text-gray-600 transition-colors\"\n              >\n                <X className=\"w-6 h-6\" />\n              </button>\n            </div>\n\n            {/* Selected Candidate Info */}\n            <div className=\"bg-gray-50 rounded-lg p-4 mb-6\">\n              <div className=\"flex items-center gap-3\">\n                <div className=\"w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white text-lg font-bold\">\n                  {selectedCandidate.name.charAt(0)}\n                </div>\n                <div>\n                  <h4 className=\"font-bold text-gray-900\">{selectedCandidate.name}</h4>\n                  <p className=\"text-gray-600 text-sm\">{selectedCandidate.partyName}</p>\n                  <p className=\"text-lg\">{selectedCandidate.symbol}</p>\n                </div>\n              </div>\n            </div>\n\n            {/* Verification Steps */}\n            <div className=\"space-y-4\">\n              {/* Step 1: CNIC Verification */}\n              {verificationStep === 'cnic' && (\n                <div>\n                  <div className=\"flex items-center gap-2 mb-4\">\n                    <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center\">\n                      <Hash className=\"w-4 h-4 text-blue-600\" />\n                    </div>\n                    <h4 className=\"font-semibold text-gray-900\">Step 1: CNIC Verification</h4>\n                  </div>\n                  \n                  <p className=\"text-gray-600 mb-4\">\n                    Enter your 13-digit CNIC number to verify your voter registration.\n                  </p>\n                  \n                  <input\n                    type=\"text\"\n                    value={cnicNumber}\n                    onChange={(e) => {\n                      setCnicNumber(formatCNIC(e.target.value));\n                      setCnicError('');\n                    }}\n                    placeholder=\"Enter your CNIC number\"\n                    className={`w-full px-4 py-3 border-2 rounded-lg transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 ${\n                      cnicError \n                        ? 'border-red-300 bg-red-50' \n                        : 'border-gray-300 focus:border-blue-500'\n                    }`}\n                    disabled={votingInProgress}\n                  />\n                  \n                  {cnicError && (\n                    <div className=\"mt-2 flex items-center gap-2 text-red-600 text-sm\">\n                      <AlertCircle className=\"w-4 h-4\" />\n                      {cnicError}\n                    </div>\n                  )}\n                  \n                  <button\n                    onClick={handleCnicSubmit}\n                    disabled={votingInProgress || !cnicNumber || cnicNumber.length !== 13}\n                    className=\"w-full mt-4 bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-4 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center gap-2\"\n                  >\n                    {votingInProgress ? (\n                      <>\n                        <Loader2 className=\"w-4 h-4 animate-spin\" />\n                        Verifying CNIC...\n                      </>\n                    ) : (\n                      'Verify CNIC'\n                    )}\n                  </button>\n                </div>\n              )}\n\n              {/* Step 2: Fingerprint Verification */}\n              {verificationStep === 'fingerprint' && userRegistration && (\n                <div>\n                  <div className=\"flex items-center gap-2 mb-4\">\n                    <div className=\"w-8 h-8 bg-green-100 rounded-full flex items-center justify-center\">\n                      <Fingerprint className=\"w-4 h-4 text-green-600\" />\n                    </div>\n                    <h4 className=\"font-semibold text-gray-900\">Step 2: Fingerprint Verification</h4>\n                  </div>\n\n                  {/* User Info */}\n                  <div className=\"bg-green-50 border border-green-200 rounded-lg p-4 mb-4\">\n                    <div className=\"text-green-800\">\n                      <p className=\"font-medium\">✅ CNIC Verified</p>\n                      <p className=\"text-sm\">Name: {userRegistration.firstName} {userRegistration.lastName}</p>\n                      <p className=\"text-sm\">Province: {userRegistration.province}</p>\n                      <p className=\"text-sm\">Constituency: {userRegistration.constituency}</p>\n                    </div>\n                  </div>\n                  \n                  <p className=\"text-gray-600 mb-4\">\n                    Now verify your identity using your fingerprint to cast your vote securely.\n                  </p>\n\n                  {/* Fingerprint Button */}\n                  <div className=\"text-center mb-4\">\n                    <button\n                      onClick={handleBiometricVerification}\n                      disabled={isBiometricLoading}\n                      className={`relative group transition-all duration-300 ${\n                        isBiometricLoading ? 'cursor-wait' : 'cursor-pointer hover:scale-110'\n                      }`}\n                    >\n                      <div className=\"w-32 h-32 bg-gradient-to-br from-green-500 to-blue-600 rounded-full flex items-center justify-center shadow-lg mx-auto\">\n                        <Fingerprint className=\"w-16 h-16 text-white\" />\n                      </div>\n                    </button>\n                  </div>\n\n                  {/* Status Message */}\n                  {biometricStatus && (\n                    <div className={`p-3 rounded-lg text-sm font-medium text-center ${\n                      biometricStatus.includes('✅') \n                        ? 'bg-green-50 border border-green-200 text-green-800'\n                        : biometricStatus.includes('❌')\n                        ? 'bg-red-50 border border-red-200 text-red-800'\n                        : 'bg-blue-50 border border-blue-200 text-blue-800'\n                    }`}>\n                      {biometricStatus}\n                    </div>\n                  )}\n                </div>\n              )}\n\n              {/* Step 3: Processing Vote */}\n              {verificationStep === 'verifying' && (\n                <div className=\"text-center py-8\">\n                  <Loader2 className=\"w-16 h-16 text-blue-600 mx-auto mb-4 animate-spin\" />\n                  <h4 className=\"font-semibold text-gray-900 mb-2\">Processing Your Vote</h4>\n                  <p className=\"text-gray-600\">\n                    Your vote is being securely recorded on the blockchain...\n                  </p>\n                  {biometricStatus && (\n                    <p className=\"text-sm text-blue-600 mt-2\">{biometricStatus}</p>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CandidateList;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1848, "column": 0}, "map": {"version":3,"sources":["file:///home/humayou/Desktop/Decentralized-Voting-System/src/app/userportal/page.jsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useVoting } from '@/context/ContractContext';\nimport ElectionCard from '@/components/ElectionCard';\nimport CandidateList from '@/components/CandidateList';\nimport { ArrowLeft, Vote, Clock, Users, Loader2, AlertCircle } from 'lucide-react';\n\nconst UserPortal = () => {\n  const { \n    isConnected, \n    account, \n    isLoading,\n    connectWallet,\n    getCurrentElectionId,\n    getElectionDetails\n  } = useVoting();\n  \n  const [selectedElection, setSelectedElection] = useState(null);\n  const [elections, setElections] = useState([]);\n  const [loadingElections, setLoadingElections] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch elections from contract\n  useEffect(() => {\n    const fetchElections = async () => {\n      if (!isConnected) return;\n      \n      try {\n        setLoadingElections(true);\n        setError(null);\n        \n        // Get current election ID to determine how many elections exist\n        const currentElectionId = await getCurrentElectionId();\n        const totalElections = parseInt(currentElectionId);\n        \n        // Fetch details for each election\n        const electionPromises = [];\n        for (let i = 1; i <= totalElections; i++) {\n          electionPromises.push(getElectionDetails(i.toString()));\n        }\n        \n        const electionDetails = await Promise.all(electionPromises);\n        setElections(electionDetails);\n        \n      } catch (error) {\n        console.error('Error fetching elections:', error);\n        setError('Failed to load elections. Please try again.');\n        setElections([]);\n      } finally {\n        setLoadingElections(false);\n      }\n    };\n\n    if (isConnected) {\n      fetchElections();\n    }\n  }, [isConnected, getCurrentElectionId, getElectionDetails]);\n\n  const handleElectionSelect = (election) => {\n    setSelectedElection(election);\n  };\n\n  const handleBackToElections = () => {\n    setSelectedElection(null);\n  };\n\n  const getActiveElections = () => {\n    const now = new Date();\n    return elections.filter(election => {\n      const startDate = new Date(parseInt(election.startTime) * 1000);\n      const endDate = new Date(parseInt(election.endTime) * 1000);\n      return election.isActive && now >= startDate && now <= endDate;\n    });\n  };\n\n  const isElectionActive = (election) => {\n    const now = new Date();\n    const startDate = new Date(parseInt(election.startTime) * 1000);\n    const endDate = new Date(parseInt(election.endTime) * 1000);\n    return election.isActive && now >= startDate && now <= endDate;\n  };\n\n  if (!isConnected) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 flex items-center justify-center\">\n        <div className=\"bg-white rounded-lg shadow-lg p-8 max-w-md w-full mx-4\">\n          <div className=\"text-center\">\n            <Vote className=\"w-16 h-16 text-blue-600 mx-auto mb-4\" />\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n              Connect Your Wallet\n            </h2>\n            <p className=\"text-gray-600 mb-6\">\n              Please connect your wallet to access the voting portal and participate in elections.\n            </p>\n            <button \n              onClick={connectWallet}\n              disabled={isLoading}\n              className=\"bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-6 rounded-lg transition-colors disabled:opacity-50 flex items-center justify-center gap-2 w-full\"\n            >\n              {isLoading ? (\n                <>\n                  <Loader2 className=\"w-4 h-4 animate-spin\" />\n                  Connecting...\n                </>\n              ) : (\n                'Connect Wallet'\n              )}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const activeElections = getActiveElections();\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100\">\n      <div className=\"container mx-auto px-4 py-8\">\n        {/* Header */}\n        <div className=\"bg-white rounded-lg shadow-sm p-6 mb-8\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900 flex items-center gap-3\">\n                <Vote className=\"w-8 h-8 text-blue-600\" />\n                Voter Portal\n              </h1>\n              <p className=\"text-gray-600 mt-1\">\n                Connected: {account?.slice(0, 6)}...{account?.slice(-4)}\n              </p>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <div className=\"text-right\">\n                <p className=\"text-sm text-gray-500\">Active Elections</p>\n                <p className=\"text-2xl font-bold text-blue-600\">{activeElections.length}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Error Message */}\n        {error && (\n          <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\n            <div className=\"flex items-center gap-2 text-red-800\">\n              <AlertCircle className=\"w-5 h-5\" />\n              <span className=\"font-medium\">Error</span>\n            </div>\n            <p className=\"text-red-700 mt-1\">{error}</p>\n            <button\n              onClick={() => window.location.reload()}\n              className=\"mt-2 text-red-600 hover:text-red-700 font-medium\"\n            >\n              Retry\n            </button>\n          </div>\n        )}\n\n        {/* Main Content */}\n        {!selectedElection ? (\n          <div className=\"space-y-8\">\n            {/* Loading State */}\n            {loadingElections ? (\n              <div className=\"bg-white rounded-lg shadow-sm p-12 text-center\">\n                <Loader2 className=\"w-16 h-16 text-blue-600 mx-auto mb-4 animate-spin\" />\n                <h3 className=\"text-xl font-semibold text-gray-600 mb-2\">\n                  Loading Elections...\n                </h3>\n                <p className=\"text-gray-500\">\n                  Fetching election data from the blockchain.\n                </p>\n              </div>\n            ) : (\n              <>\n                {/* Active Elections */}\n                <div>\n                  <h2 className=\"text-2xl font-bold text-gray-900 mb-6 flex items-center gap-2\">\n                    <Clock className=\"w-6 h-6 text-green-600\" />\n                    Active Elections\n                  </h2>\n                  \n                  {activeElections.length === 0 ? (\n                    <div className=\"bg-white rounded-lg shadow-sm p-12 text-center\">\n                      <Vote className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" />\n                      <h3 className=\"text-xl font-semibold text-gray-600 mb-2\">\n                        No Active Elections\n                      </h3>\n                      <p className=\"text-gray-500\">\n                        There are currently no active elections. Check back later.\n                      </p>\n                    </div>\n                  ) : (\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                      {activeElections.map((election) => (\n                        <ElectionCard\n                          key={election.electionId}\n                          election={election}\n                          onSelect={handleElectionSelect}\n                        />\n                      ))}\n                    </div>\n                  )}\n                </div>\n\n                {/* All Elections */}\n                {elections.length > 0 && (\n                  <div>\n                    <h2 className=\"text-2xl font-bold text-gray-900 mb-6 flex items-center gap-2\">\n                      <Users className=\"w-6 h-6 text-gray-600\" />\n                      All Elections\n                    </h2>\n                    \n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                      {elections.map((election) => (\n                        <ElectionCard\n                          key={election.electionId}\n                          election={election}\n                          onSelect={handleElectionSelect}\n                          showInactive={true}\n                        />\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </>\n            )}\n          </div>\n        ) : (\n          /* Selected Election View */\n          <div>\n            <div className=\"mb-6\">\n              <button\n                onClick={handleBackToElections}\n                className=\"flex items-center gap-2 text-blue-600 hover:text-blue-700 font-medium mb-4 transition-colors\"\n              >\n                <ArrowLeft className=\"w-4 h-4\" />\n                Back to Elections\n              </button>\n              \n              <div className=\"bg-white rounded-lg shadow-sm p-6\">\n                <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                  {selectedElection.title}\n                </h2>\n                <p className=\"text-gray-600 mb-4\">\n                  {selectedElection.description}\n                </p>\n                \n                <div className=\"flex items-center gap-6 text-sm text-gray-500\">\n                  <div className=\"flex items-center gap-2\">\n                    <Clock className=\"w-4 h-4\" />\n                    <span>\n                      Ends: {new Date(parseInt(selectedElection.endTime) * 1000).toLocaleDateString()}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <Users className=\"w-4 h-4\" />\n                    <span>{selectedElection.totalVotes} votes cast</span>\n                  </div>\n                  <div className={`px-2 py-1 rounded-full text-xs font-medium ${\n                    isElectionActive(selectedElection)\n                      ? 'bg-green-100 text-green-800' \n                      : 'bg-gray-100 text-gray-800'\n                  }`}>\n                    {isElectionActive(selectedElection) ? 'Active' : 'Inactive'}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <CandidateList \n              electionId={selectedElection.electionId}\n              isElectionActive={isElectionActive(selectedElection)}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UserPortal;"],"names":[],"mappings":"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","debugId":null}}]
}